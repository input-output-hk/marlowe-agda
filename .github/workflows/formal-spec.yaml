name: "formal-spec"

env:
  ALLOWED_URIS: "https://github.com https://api.github.com"
  TRUSTED_PUBLIC_KEYS:
    "cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=
    hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ="
  SUBSTITUTERS: "https://cache.nixos.org/ https://cache.iog.io"

on:
  pull_request:
    paths:
      - "flake.lock"
      - "flake.nix"
      - "formal-spec/**"
  push:
    branches:
      - main
    paths:
      - "flake.lock"
      - "flake.nix"
      - "formal-spec/**"

jobs:
  ################################################################################
  # Formal Specification in Agda - under /formal-spec/
  ################################################################################
  formal-spec-typecheck:
    name: "Typecheck"
    runs-on: ubuntu-22.04
    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v4

      - name: üíæ Cache Nix store
        uses: actions/cache@v3.0.8
        id: nix-cache
        with:
          path: /tmp/nixcache
          key: ${{ runner.os }}-nix-typecheck-${{ hashFiles('flake.lock') }}
          restore-keys: ${{ runner.os }}-nix-typecheck-

      - name: üõ†Ô∏è Install Nix
        uses: cachix/install-nix-action@v21
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          install_url: https://releases.nixos.org/nix/nix-2.10.3/install
          extra_nix_config: |
            allowed-uris = ${{ env.ALLOWED_URIS }}
            trusted-public-keys = ${{ env.TRUSTED_PUBLIC_KEYS }}
            substituters = ${{ env.SUBSTITUTERS }}
            experimental-features = nix-command flakes

      - name: üíæ‚û§ Import Nix store cache
        if: "steps.nix-cache.outputs.cache-hit == 'true'"
        run: "nix-store --import < /tmp/nixcache"

      - name: üèóÔ∏è Build specification
        run: |
          nix build --show-trace --accept-flake-config #marloweSpec

      - name: ‚û§üíæ Export Nix store cache
        if: "steps.nix-cache.outputs.cache-hit != 'true'"
        run:
          "nix-store --export $(find /nix/store -maxdepth 1 -name '*-*') >
          /tmp/nixcache"
